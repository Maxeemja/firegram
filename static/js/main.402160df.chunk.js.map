{"version":3,"sources":["components/Title.jsx","firebase/config.js","components/progressBar.jsx","hooks/useStorage.js","components/uploadForm.jsx","components/imgGrid.jsx","hooks/useFirestore.js","components/modal.jsx","App.jsx","index.js"],"names":["Title","className","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","db","getFirestore","timestamp","serverTimestamp","ProgressBar","file","setFile","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","uploadTask","uploadBytesResumable","on","snapshot","bytesTransferred","totalBytes","err","getDownloadURL","then","downloadURL","a","createdAt","addDoc","e","console","useStorage","log","motion","div","initial","width","animate","UploadForm","types","type","onChange","selected","target","files","includes","ImgGrid","setCurrImg","docs","setDocs","unsub","onSnapshot","query","orderBy","snap","documents","forEach","doc","push","data","id","useFirestore","map","el","key","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","currImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.402160df.chunk.js","sourcesContent":["import React from \"react\"\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","// Import the functions you need from the SDKs you need\r\nimport {initializeApp} from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\nimport { getFirestore, serverTimestamp } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCG2mVhSdHWqvt6WhZ8d10BCfQEDpjG6E8\",\r\n  authDomain: \"firegram-354d1.firebaseapp.com\",\r\n  projectId: \"firegram-354d1\",\r\n  storageBucket: \"firegram-354d1.appspot.com\",\r\n  messagingSenderId: \"83547783400\",\r\n  appId: \"1:83547783400:web:fde1c6a3450c7fb4acc95d\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst storage = getStorage(app)\r\nconst db = getFirestore(app);\r\n\r\nconst timestamp = serverTimestamp;\r\n\r\nexport {storage, timestamp, db}","import React, { useEffect } from 'react';\r\nimport { useStorage } from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\nexport const ProgressBar = ({file, setFile}) => {\r\n  const {url, progress} = useStorage(file)\r\n  console.log(progress, url)\r\n  useEffect(() => {\r\n    if(url) {\r\n      setFile(null)\r\n    }\r\n  }, [url, setFile])\r\n\r\n  return (\r\n    <motion.div className=\"progress-bar\" \r\n      initial={{width: 0}} \r\n      animate={{width: progress + '%'}} ></motion.div>\r\n  )\r\n}","import { useState, useEffect } from 'react';\r\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\r\nimport { storage, timestamp, db } from '../firebase/config';\r\nimport { async } from '@firebase/util';\r\nexport const useStorage = (file) => {\r\n\tconst [progress, setProgress] = useState(0);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [url, setUrl] = useState(null);\r\n\tuseEffect(() => {\r\n\t\t//refs\r\n\t\tconst storageRef = ref(storage, file.name);\r\n\t\tconst collectionRef = collection(db, 'imgs');\r\n\t\tconst uploadTask = uploadBytesResumable(storageRef, file);\r\n\t\tuploadTask.on(\r\n\t\t\t'state_changed',\r\n\t\t\t(snapshot) => {\r\n\t\t\t\tconst progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n\t\t\t\tsetProgress(progress);\r\n\t\t\t},\r\n\t\t\t(err) => {\r\n\t\t\t\tsetError(err);\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tgetDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\r\n          const createdAt = timestamp();\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\taddDoc(collectionRef, {\r\n\t\t\t\t\t\t\tdownloadURL,\r\n\t\t\t\t\t\t\tcreatedAt\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.error('Error adding document: ', e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetUrl(downloadURL);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t}, [file]);\r\n\treturn { progress, url, error };\r\n};\r\n","import React, { useState } from 'react';\r\nimport {ProgressBar} from './progressBar'\r\nexport const UploadForm = () => {\r\n\tconst [file, setFile] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n  \r\n\tconst types = ['image/png', 'image/jpeg'];\r\n\tconst changeHandler = (e) => {\r\n\t\tlet selected = e.target.files[0];\r\n\t\tif (selected && types.includes(selected.type)) {\r\n\t\t\tsetFile(selected);\r\n      setError('')\r\n\t\t} else {\r\n      setFile(null)\r\n      setError('Incorrect file type!')\r\n    }\r\n\t};\r\n\treturn (\r\n\t\t<form>\r\n\t\t\t<label>\r\n        <input type=\"file\" onChange={changeHandler} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        {error && <div>{error}</div>}\r\n        {file && <div>{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile}/>}\r\n      </div>\r\n\t\t</form>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useFirestore } from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\nexport const ImgGrid = ({ setCurrImg }) => {\r\n\tconst { docs } = useFirestore('imgs');\r\n\tconsole.log(docs);\r\n\treturn (\r\n\t\t<div className='img-grid'>\r\n\t\t\t{docs &&\r\n\t\t\t\tdocs.map((el) => (\r\n\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\tclassName='img-wrap'\r\n\t\t\t\t\t\tkey={el.id}\r\n\t\t\t\t\t\twhileHover={{ opacity: 1 }}\r\n\t\t\t\t\t\tonClick={() => setCurrImg(el.downloadURL)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<motion.img\r\n\t\t\t\t\t\t\tsrc={el.downloadURL}\r\n\t\t\t\t\t\t\talt='img'\r\n\t\t\t\t\t\t\tinitial={{ opacity: 0 }}\r\n\t\t\t\t\t\t\tanimate={{ opacity: 1 }}\r\n              transition={{delay: 1}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</motion.div>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { collection, onSnapshot, orderBy, query} from 'firebase/firestore';\r\nimport { useState, useEffect } from 'react';\r\nimport { db } from '../firebase/config';\r\n\r\nexport const useFirestore = (name) => {\r\n\tconst [docs, setDocs] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsub = onSnapshot(query(collection(db, name), orderBy('createdAt', 'desc')), (snap) => {\r\n\t\t\tlet documents = [];\r\n\t\t\tsnap.forEach((doc) => {\r\n\t\t\t\tdocuments.push({ ...doc.data(), id: doc.id });\r\n\t\t\t});\r\n\t\t\tsetDocs(documents);\r\n\t\t});\r\n\t\treturn () => unsub();\r\n\t}, [name]);\r\n\r\n\treturn { docs };\r\n};\r\n","import React from 'react'\r\nimport { motion } from 'framer-motion';\r\nexport const Modal = ({currImg, setCurrImg}) => {\r\n  const handleClick = (e) => {\r\n    e.target.classList.contains('backdrop') && setCurrImg(null);\r\n  }\r\n\r\n  return (\r\n    <motion.div className=\"backdrop\" onClick={handleClick}\r\n      initial={{opacity: 0}}\r\n      animate={{opacity: 1}}\r\n    >\r\n      <motion.img  src={currImg} alt=\"enlarged pic\" \r\n        initial={{y: '-100vh'}} \r\n        animate={{y: 0}}\r\n      />  \r\n    </motion.div>\r\n  )\r\n}","import Title from './components/Title';\nimport React, { useState } from 'react';\nimport { UploadForm } from './components/uploadForm';\nimport { ImgGrid } from './components/imgGrid';\nimport { Modal } from './components/modal';\nfunction App() {\n  const [currImg, setCurrImg] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <ImgGrid setCurrImg={setCurrImg}/>\n      {currImg && <Modal currImg={currImg} setCurrImg={setCurrImg}/>}\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}